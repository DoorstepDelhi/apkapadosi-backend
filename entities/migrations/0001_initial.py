# Generated by Django 4.2.6 on 2024-08-19 01:09

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import utils.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326, validators=[utils.validators.validate_coordinates])),
                ('address', models.TextField()),
                ('contact_info', models.CharField(max_length=255, validators=[utils.validators.validate_phone_number])),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True, null=True, validators=[utils.validators.validate_website_url])),
                ('logo', models.ImageField(blank=True, null=True, upload_to='entity_logos/', validators=[utils.validators.validate_image_file])),
                ('documents', django.contrib.postgres.fields.ArrayField(base_field=models.FileField(upload_to='entity_documents/', validators=[utils.validators.validate_document_file]), blank=True, null=True, size=None)),
                ('deals_in', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('business_hours', models.JSONField(blank=True, default=dict, null=True)),
                ('amenities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None)),
                ('payment_methods', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, null=True, size=None)),
                ('social_media_links', models.JSONField(blank=True, default=dict, null=True)),
                ('additional_info', models.JSONField(blank=True, default=dict, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EntityMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('tour_360', '360 Tour')], max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='entity_media/')),
                ('url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='entities.entity')),
            ],
        ),
        migrations.CreateModel(
            name='EntityUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('collaborator', 'Collaborator')], max_length=20)),
                ('permission', models.CharField(blank=True, choices=[('edit', 'Edit'), ('view', 'View')], max_length=10, null=True)),
                ('is_creator', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='entities.entity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('entity', 'user')},
            },
        ),
    ]
